name: Build

on:
  push:
    branches: ["main"]
  pull_request:
    types: [opened, synchronize]
  merge_group:
  workflow_dispatch:

permissions:
  contents: read

# automatically cancel previous runs on the same PR
# https://stackoverflow.com/questions/66335225/how-to-cancel-previous-runs-in-the-pr-when-you-push-new-commitsupdate-the-curre/67939898#67939898
concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.sha }}
  cancel-in-progress: true

jobs:
  build:
    name: "Build"
    runs-on: ubuntu-22.04
    env:
      RUSTFLAGS: --deny warnings # fatal warnings
      CARGO_TERM_COLOR: always
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          # https://github.com/actions/checkout/issues/626
          # This is correct, because we're using a merge queue which only merges when built against the latest target branch.
          # https://docs.mergify.com/actions/queue/
          ref: ${{ github.event.pull_request.head.sha }}

      - name: Install Rust Toolchain
        uses: dtolnay/rust-toolchain@stable

      - name: Rust build cache
        uses: Swatinem/rust-cache@v2

      - name: Install tools
        run: cargo install sqlx-cli

      - name: load envrc
        uses: HatsuneMiku3939/direnv-action@94734be6b4a6e24d802d656df032847d6178b641 # pin@v1

      - name: Migrate database
        run: |
          sqlx database create
          sqlx migrate run

      - name: Validate current schema
        run: cmp -s <(sqlite3 -init /dev/null data/data.sqlite '.schema') schema.sql

      - name: Validate sqlx offline mode data
        run: cargo sqlx prepare --check

      - name: Check default build
        run: cargo check

      - name: Check feature 'embed_migrations'
        run: cargo check --features embed_migrations

      - name: Check formatting
        run: cargo fmt --check
