{
  "db": "SQLite",
  "02a518fe7de0d3d0c1fd77ee243ab5f1968ed62faca4bb2fd82e2f0bd9cca664": {
    "describe": {
      "columns": [
        {
          "name": "id",
          "ordinal": 0,
          "type_info": "Int64"
        },
        {
          "name": "text",
          "ordinal": 1,
          "type_info": "Text"
        }
      ],
      "nullable": [
        false,
        false
      ],
      "parameters": {
        "Right": 1
      }
    },
    "query": "SELECT id, text from statements where id = ?"
  },
  "28e7560c372f7d6b2148b3932b410a9e8e0a1aa5e809ba51be7b52417b3174d2": {
    "describe": {
      "columns": [
        {
          "name": "statement_id",
          "ordinal": 0,
          "type_info": "Int64"
        },
        {
          "name": "state",
          "ordinal": 1,
          "type_info": "Int64"
        },
        {
          "name": "categories",
          "ordinal": 2,
          "type_info": "Text"
        },
        {
          "name": "created",
          "ordinal": 3,
          "type_info": "Int64"
        }
      ],
      "nullable": [
        false,
        false,
        false,
        false
      ],
      "parameters": {
        "Right": 1
      }
    },
    "query": "SELECT statement_id, state, categories, created\n            FROM statement_flags\n            WHERE statement_id = ?"
  },
  "2c36f28b43d87b8c0cbc87289ab2ab158593567f55f117e54af99eae3b6b3a78": {
    "describe": {
      "columns": [
        {
          "name": "statement_id!",
          "ordinal": 0,
          "type_info": "Int64"
        },
        {
          "name": "ai_env!",
          "ordinal": 1,
          "type_info": "Text"
        },
        {
          "name": "prompt_name!",
          "ordinal": 2,
          "type_info": "Text"
        },
        {
          "name": "prompt_version!",
          "ordinal": 3,
          "type_info": "Int64"
        },
        {
          "name": "prompt_result!",
          "ordinal": 4,
          "type_info": "Text"
        },
        {
          "name": "completion_tokens!",
          "ordinal": 5,
          "type_info": "Int64"
        },
        {
          "name": "prompt_tokens!",
          "ordinal": 6,
          "type_info": "Int64"
        },
        {
          "name": "total_tokens!",
          "ordinal": 7,
          "type_info": "Int64"
        },
        {
          "name": "created!",
          "ordinal": 8,
          "type_info": "Int64"
        }
      ],
      "nullable": [
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        true,
        false
      ],
      "parameters": {
        "Right": 1
      }
    },
    "query": "select\n-- see: https://github.com/launchbadge/sqlx/issues/1126 on why this is necessary when using ORDER BY\n  statement_id as \"statement_id!\",\n  ai_env as \"ai_env!\",\n  prompt_name as \"prompt_name!\",\n  prompt_version as \"prompt_version!\",\n  prompt_result as \"prompt_result!\",\n  completion_tokens as \"completion_tokens!\",\n  prompt_tokens as \"prompt_tokens!\",\n  total_tokens as \"total_tokens!\",\n  created as \"created!\"\nfrom statement_predictions\nwhere statement_id = ? order by created desc"
  },
  "3be371f8ea7e76aedde761879362551e3291d6699854900ce25868b8d1e1c5fa": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Right": 1
      }
    },
    "query": "DELETE FROM users WHERE id=?"
  },
  "6c965651617ff5355303d5372fa876eb70077ea26500dcc1de58cc846ba90391": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Right": 8
      }
    },
    "query": "INSERT INTO statement_predictions\n                (statement_id, ai_env, prompt_name, prompt_version,\n                 prompt_result, completion_tokens, prompt_tokens, api_key_id)\n                VALUES (?, ?, ?, ?, ?, ?, ?, ?)"
  },
  "6f942cf713ff1257b8684a0bc9954d37917f89855291f17de4649d3e03cd47e1": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Right": 2
      }
    },
    "query": "INSERT INTO alternatives (statement_id, alternative_id) VALUES (?, ?)\n         on conflict(statement_id, alternative_id) do nothing"
  },
  "759358773931c1ee6b54cd55371dc58486311a952f08d9080c9bc2661aef78a8": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Right": 4
      }
    },
    "query": "INSERT INTO followups (statement_id, followup_id, target_yes, target_no) VALUES (?, ?, ?, ?)\n         on conflict(statement_id, followup_id) do update\n         set target_yes = min(1, target_yes + excluded.target_yes),\n             target_no  = min(1, target_no  + excluded.target_no )"
  },
  "75fe5c149645183d120fd6b07c2d1cc50fdf28f46198928d6eacdcca07ad38e8": {
    "describe": {
      "columns": [
        {
          "name": "vote",
          "ordinal": 0,
          "type_info": "Int64"
        }
      ],
      "nullable": [
        false
      ],
      "parameters": {
        "Right": 2
      }
    },
    "query": "select vote from votes where user_id = ? and statement_id = ?"
  },
  "7c0016f1d57f360ccd50022c00e10e12418dbc8ef4668ad2a1065d147e75d1b5": {
    "describe": {
      "columns": [
        {
          "name": "count",
          "ordinal": 0,
          "type_info": "Int"
        }
      ],
      "nullable": [
        false
      ],
      "parameters": {
        "Right": 1
      }
    },
    "query": "SELECT COUNT(*) as count FROM authors where user_id = ?"
  },
  "9d628a139bcb5376e9d685b3052c9d78940db9ce6cfb47060fd6f40866449903": {
    "describe": {
      "columns": [
        {
          "name": "count",
          "ordinal": 0,
          "type_info": "Int"
        }
      ],
      "nullable": [
        false
      ],
      "parameters": {
        "Right": 1
      }
    },
    "query": "SELECT COUNT(*) as count FROM votes where user_id = ?"
  },
  "9d9cc8b6aa02305b9c83ae238781fe1e81416c8ccec717b62a14268a37f6462a": {
    "describe": {
      "columns": [
        {
          "name": "followup_id",
          "ordinal": 0,
          "type_info": "Int64"
        }
      ],
      "nullable": [
        false
      ],
      "parameters": {
        "Right": 1
      }
    },
    "query": "select followup_id from followups where statement_id = ?"
  },
  "a32c2dc990c0b7f41bb9305aab078a6e9421622cc9b71ff644740a3c41a30e57": {
    "describe": {
      "columns": [
        {
          "name": "id",
          "ordinal": 0,
          "type_info": "Int64"
        },
        {
          "name": "secret",
          "ordinal": 1,
          "type_info": "Text"
        }
      ],
      "nullable": [
        false,
        false
      ],
      "parameters": {
        "Right": 1
      }
    },
    "query": "SELECT id, secret from users WHERE secret = ?"
  },
  "a469f14343e978999c406bfc62326962282082a2512974fd57dac08d65c3fb87": {
    "describe": {
      "columns": [
        {
          "name": "id",
          "ordinal": 0,
          "type_info": "Int64"
        },
        {
          "name": "text",
          "ordinal": 1,
          "type_info": "Text"
        }
      ],
      "nullable": [
        false,
        false
      ],
      "parameters": {
        "Right": 0
      }
    },
    "query": "\n            SELECT id, text from statements\n            WHERE id NOT IN (SELECT id FROM statement_embeddings)\n            LIMIT 100"
  },
  "b0bfa8b55bcebabbd2abf5e60388a91fa92da050e135faa126d45e44a573c478": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Right": 2
      }
    },
    "query": "insert into subscriptions (user_id, statement_id) values (?, ?) on conflict do nothing"
  },
  "b67b4070eddcd230bc9666b73964d9bc921f2e8705e8943978f79b2776b59f88": {
    "describe": {
      "columns": [
        {
          "name": "statement_id",
          "ordinal": 0,
          "type_info": "Int64"
        },
        {
          "name": "statement_text",
          "ordinal": 1,
          "type_info": "Text"
        },
        {
          "name": "vote_timestamp",
          "ordinal": 2,
          "type_info": "Int64"
        },
        {
          "name": "vote",
          "ordinal": 3,
          "type_info": "Int64"
        }
      ],
      "nullable": [
        false,
        false,
        false,
        false
      ],
      "parameters": {
        "Right": 2
      }
    },
    "query": "select s.id as statement_id, s.text as statement_text, v.created as vote_timestamp, vote from vote_history v\n            join statements s on s.id = v.statement_id\n            where user_id = ? and vote != 0\n            order by v.created desc\n            limit ?\n            "
  },
  "be8828054bf9813472c1af0255675b2a382d760b9dbf597febbbc41a80258088": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Right": 3
      }
    },
    "query": "UPDATE statement_flags\n            SET state = ?, categories = ?\n            WHERE statement_id = ?"
  },
  "c6a36f90d118160d58cddd64c47aea40fcedd84e97a30a1f1bc62d39bcf52eb8": {
    "describe": {
      "columns": [
        {
          "name": "id",
          "ordinal": 0,
          "type_info": "Int64"
        },
        {
          "name": "hash",
          "ordinal": 1,
          "type_info": "Text"
        },
        {
          "name": "note",
          "ordinal": 2,
          "type_info": "Text"
        }
      ],
      "nullable": [
        false,
        false,
        true
      ],
      "parameters": {
        "Right": 1
      }
    },
    "query": "SELECT id, hash, note FROM api_keys WHERE id = ?"
  },
  "ce5f99074f61321db7041fd1f0c0ff83c91748bfcdaec69d1b47de7394a51061": {
    "describe": {
      "columns": [
        {
          "name": "subscription",
          "ordinal": 0,
          "type_info": "Int"
        }
      ],
      "nullable": [
        false
      ],
      "parameters": {
        "Right": 2
      }
    },
    "query": "select count(*) as subscription from subscriptions where user_id = ? and statement_id = ?"
  },
  "cf0316052868e5672509eb7219d8ba3e771a39defb8ac954caa153de4fd66f35": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Right": 2
      }
    },
    "query": "INSERT INTO queue (user_id, statement_id) VALUES (?, ?)"
  },
  "d38f1ea03d56233b70403c20b9c68c2fd1d7d87a6e1f04ab690e813c480ed1d6": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Right": 3
      }
    },
    "query": "INSERT INTO vote_history (user_id, statement_id, vote) VALUES (?, ?, ?)"
  },
  "d9286522ae6914b2c8116cf3678fb37a09b3aad19d4a537bf3004a398593901d": {
    "describe": {
      "columns": [
        {
          "name": "id",
          "ordinal": 0,
          "type_info": "Int64"
        },
        {
          "name": "text",
          "ordinal": 1,
          "type_info": "Text"
        }
      ],
      "nullable": [
        false,
        false
      ],
      "parameters": {
        "Right": 3
      }
    },
    "query": "SELECT id,text FROM statements WHERE\nid NOT IN\n  (SELECT statement_id\n   FROM statement_predictions\n   WHERE\n     prompt_name = ? AND\n     prompt_version = ?\n) AND\n-- id must not be flagged\nid IN\n(SELECT statement_id\n   FROM statement_flags\n   WHERE\n     state = ?\n)\nLIMIT 1"
  },
  "e99fbce93ea1971be57e4557b829636145e1c0fa993544de9916e251d51ea3a3": {
    "describe": {
      "columns": [
        {
          "name": "id",
          "ordinal": 0,
          "type_info": "Int64"
        },
        {
          "name": "hash",
          "ordinal": 1,
          "type_info": "Text"
        },
        {
          "name": "note",
          "ordinal": 2,
          "type_info": "Text"
        }
      ],
      "nullable": [
        false,
        false,
        true
      ],
      "parameters": {
        "Right": 1
      }
    },
    "query": "SELECT id, hash, note FROM api_keys WHERE hash = ?"
  },
  "f19e2063a3761014f86e68d49ff642ee85852da18e2922981ebe665875fabe2c": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Right": 2
      }
    },
    "query": "INSERT INTO api_keys (hash, note) VALUES (?, ?)"
  },
  "f66d60f52e375d371576b152a3e61e41323a9afd91719cfb972662d00c36e1b8": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Right": 3
      }
    },
    "query": "INSERT INTO statement_flags\n            (statement_id, state, categories)\n            VALUES (?, ?, ?)"
  },
  "fa547048a2ff6f7db4a3b154acfe0a3d9632a2b0b286a3a99f63548179b6e8b2": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Right": 2
      }
    },
    "query": "INSERT INTO authors (user_id, statement_id) VALUES (?, ?)"
  },
  "fc91196f2395dfad1783ee837bc1ea234f22814bbc07b0ccafd66197b20d5fde": {
    "describe": {
      "columns": [
        {
          "name": "id",
          "ordinal": 0,
          "type_info": "Int64"
        },
        {
          "name": "text",
          "ordinal": 1,
          "type_info": "Text"
        }
      ],
      "nullable": [
        false,
        false
      ],
      "parameters": {
        "Right": 3
      }
    },
    "query": "SELECT id,text FROM statements WHERE\nid NOT IN\n  (SELECT statement_id\n   FROM statement_predictions\n   WHERE\n     prompt_name = ? AND\n     prompt_version = ?\n) AND\n-- id must not be flagged\nid NOT IN\n(SELECT statement_id\n   FROM statement_flags\n)\nLIMIT ?"
  },
  "fd1af445f9aa1ca343f269f11dc199275b6f7f5d4e65198407e9a922d4cd664c": {
    "describe": {
      "columns": [],
      "nullable": [],
      "parameters": {
        "Right": 2
      }
    },
    "query": "INSERT INTO subscriptions (user_id, statement_id) VALUES (?, ?)"
  }
}